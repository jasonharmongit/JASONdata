"""add table_name to notebooks

Revision ID: e4e942101f90
Revises: 4fc6b4aac154
Create Date: 2025-04-09 18:54:13.997214

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4e942101f90'
down_revision: Union[str, None] = '4fc6b4aac154'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_datasets_id', table_name='datasets')
    op.drop_index('ix_datasets_name', table_name='datasets')
    op.drop_table('datasets')
    op.add_column('notebooks', sa.Column('table_name', sa.String(), nullable=True))
    op.drop_column('notebooks', 'file_path')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notebooks', sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('notebooks', 'table_name')
    op.create_table('datasets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('notebook_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dataset_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['notebook_id'], ['notebooks.id'], name='datasets_notebook_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='datasets_pkey')
    )
    op.create_index('ix_datasets_name', 'datasets', ['name'], unique=False)
    op.create_index('ix_datasets_id', 'datasets', ['id'], unique=False)
    # ### end Alembic commands ###
